{
  "description": "The `Workflow Definition & Registry` subsystem is responsible for the interpretation of the declarative PLX language and the management of all defined pipes, concepts (data schemas), and domains. It acts as the foundational layer for transforming high-level workflow descriptions into an executable internal representation and maintaining a consistent catalog of available components.",
  "components": [
    {
      "name": "PLX Interpreter",
      "description": "This component is the primary entry point for processing raw PLX content. It performs lexical analysis, parsing, and semantic validation of pipeline, pipe, concept, and domain definitions. Its core responsibility is to transform these declarative definitions into an executable internal blueprint, registering them with the respective registries.",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.core.interpreter.PipelexInterpreter",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/interpreter.py",
          "reference_start_line": 30,
          "reference_end_line": 1016
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/interpreter.py"
      ],
      "can_expand": true
    },
    {
      "name": "Pipe Registry",
      "description": "The Pipe Registry serves as the central repository for all user-defined and native pipe definitions. It manages their lifecycle, including registration, retrieval, and validation. This registry stores critical metadata such as input/output schemas, configuration parameters, and references to their execution logic, ensuring pipes are discoverable and consistently applied within pipelines.",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.core.pipes",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/pipes/",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/pipes/pipe_input_spec_blueprint.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/pipes/pipe_run_params.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/pipes/pipe_blueprint.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/pipes/pipe_provider_abstract.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/pipes/pipe_output.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/pipes/pipe_factory.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/pipes/pipe_abstract.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/pipes/exceptions.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/pipes/pipe_input_spec_factory.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/pipes/pipe_run_params_factory.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/pipes/pipe_input_spec.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/pipes/pipe_library.py"
      ],
      "can_expand": true
    },
    {
      "name": "Concept Registry",
      "description": "This component is responsible for managing the lifecycle and availability of all user-defined and native concepts, which represent structured data schemas. It ensures data consistency and type safety across different pipes and pipelines by providing a centralized definition of data types and structures.",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.core.concepts",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/concepts/",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/concepts/__init__.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/concepts/concept_provider_abstract.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/concepts/concept_blueprint.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/concepts/concept.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/concepts/concept_library.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/concepts/concept_native.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/concepts/exceptions.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/concepts/concept_factory.py"
      ],
      "can_expand": true
    },
    {
      "name": "Domain Registry",
      "description": "The Domain Registry manages the lifecycle and availability of all user-defined and native domains. Domains likely provide contextual categorization, scoping, or environmental definitions for pipes and concepts, facilitating organization and potentially access control within the PLX ecosystem.",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.core.domains",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/domains/",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/domains/domain.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/domains/domain_library.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/domains/domain_provider_abstract.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/domains/domain_factory.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/domains/exceptions.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/domains/domain_blueprint.py"
      ],
      "can_expand": true
    },
    {
      "name": "Unclassified",
      "description": "Component for all unclassified files and utility functions (Utility functions/External Libraries/Dependencies)",
      "referenced_source_code": [],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/libraries/",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/pipes/",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/concepts/",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/domains/",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/create/structured_output_generator.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/create/helpers.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/create/draft_pipeline.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/create/build_blueprint.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/tools/func_registry.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/tools/class_registry_utils.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/tools/registry_models.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/tools/typing/validation_utils.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/tools/typing/module_inspector.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/tools/typing/type_inspector.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/tools/typing/pydantic_utils.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/registry_models.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/bundles/pipelex_bundle_blueprint.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/bundles/exceptions.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/libraries/__init__.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/libraries/library_manager.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/libraries/library_config.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/libraries/library_manager_abstract.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/libraries/library_manager_factory.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/libraries/pipelines/__init__.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/libraries/pipelines/meta/pipeline_draft.py"
      ],
      "can_expand": false
    }
  ],
  "components_relations": [
    {
      "relation": "Registers definitions with",
      "src_name": "PLX Interpreter",
      "dst_name": "Pipe Registry"
    },
    {
      "relation": "Registers definitions with",
      "src_name": "PLX Interpreter",
      "dst_name": "Concept Registry"
    },
    {
      "relation": "Registers definitions with",
      "src_name": "PLX Interpreter",
      "dst_name": "Domain Registry"
    },
    {
      "relation": "References",
      "src_name": "Pipe Registry",
      "dst_name": "Concept Registry"
    },
    {
      "relation": "Is categorized by",
      "src_name": "Pipe Registry",
      "dst_name": "Domain Registry"
    },
    {
      "relation": "Is categorized by",
      "src_name": "Concept Registry",
      "dst_name": "Domain Registry"
    }
  ]
}
