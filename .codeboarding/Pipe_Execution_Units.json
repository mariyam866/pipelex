{
  "description": "The `pipelex` project's core subsystem is designed around a flexible pipeline execution model. Pipe Operators define the atomic units of work, interacting with Core Memory / State Management for data. Pipe Controllers orchestrate execution, managing flow. AI Model Adapters / Integrations and Cognitive Tools / AI Operations provide specialized AI capabilities to Pipe Operators. Utility Tools offer general services like configuration. This architecture promotes modularity for easy extension and adaptation.",
  "components": [
    {
      "name": "Pipe Operators",
      "description": "This component encapsulates the specific operational logic for individual steps (pipes) within a pipeline. It includes the core definitions and interfaces for pipes, as well as their concrete implementations, serving as the atomic units of work. Pipe Operators are responsible for executing tasks such as interacting with AI models, executing custom functions, or performing data transformations, adhering to a clear knowledge-in, knowledge-out contract.",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.core.pipes.pipe_abstract.PipeAbstract",
          "reference_file": "pipelex/core/pipes/pipe_abstract.py",
          "reference_start_line": 16,
          "reference_end_line": 94
        },
        {
          "qualified_name": "pipelex.pipe_operators.pipe_operator.PipeOperator",
          "reference_file": "pipelex/pipe_operators/pipe_operator.py",
          "reference_start_line": 19,
          "reference_end_line": 102
        },
        {
          "qualified_name": "pipelex.pipe_operators.llm.pipe_llm.LLMPipe",
          "reference_file": "pipelex/pipe_operators/llm/pipe_llm.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [
        "pipelex/pipe_operators/__init__.py",
        "pipelex/pipe_operators/pipe_operator.py",
        "pipelex/pipe_operators/ocr/__init__.py",
        "pipelex/pipe_operators/ocr/pipe_ocr_factory.py",
        "pipelex/pipe_operators/ocr/pipe_ocr_blueprint.py",
        "pipelex/pipe_operators/ocr/pipe_ocr.py",
        "pipelex/pipe_operators/func/__init__.py",
        "pipelex/pipe_operators/func/pipe_func_blueprint.py",
        "pipelex/pipe_operators/func/pipe_func_factory.py",
        "pipelex/pipe_operators/func/pipe_func.py",
        "pipelex/pipe_operators/compose/__init__.py",
        "pipelex/pipe_operators/compose/pipe_compose.py",
        "pipelex/pipe_operators/compose/pipe_compose_factory.py",
        "pipelex/pipe_operators/compose/pipe_compose_blueprint.py",
        "pipelex/pipe_operators/llm/__init__.py",
        "pipelex/pipe_operators/llm/pipe_llm_factory.py",
        "pipelex/pipe_operators/llm/pipe_llm_blueprint.py",
        "pipelex/pipe_operators/llm/pipe_llm.py",
        "pipelex/pipe_operators/img_gen/__init__.py",
        "pipelex/pipe_operators/img_gen/pipe_img_gen_factory.py",
        "pipelex/pipe_operators/img_gen/pipe_img_gen_blueprint.py",
        "pipelex/pipe_operators/img_gen/pipe_img_gen.py",
        "pipelex/core/pipes/__init__.py",
        "pipelex/core/pipes/pipe_run_params.py",
        "pipelex/core/pipes/pipe_blueprint.py",
        "pipelex/core/pipes/specific_pipe.py",
        "pipelex/core/pipes/pipe_provider_abstract.py",
        "pipelex/core/pipes/pipe_input_blueprint.py",
        "pipelex/core/pipes/pipe_output.py",
        "pipelex/core/pipes/pipe_input.py",
        "pipelex/core/pipes/pipe_input_factory.py",
        "pipelex/core/pipes/pipe_factory.py",
        "pipelex/core/pipes/pipe_abstract.py",
        "pipelex/core/pipes/exceptions.py",
        "pipelex/core/pipes/pipe_run_params_factory.py",
        "pipelex/core/pipes/pipe_library.py"
      ],
      "can_expand": true
    },
    {
      "name": "Core Memory / State Management",
      "description": "Manages the state and data flow within and between pipeline steps, ensuring consistent access to information. This component is crucial for maintaining context and sharing results across different pipe operations.",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.core.memory",
          "reference_file": "pipelex/core/memory/__init__.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "AI Model Adapters / Integrations",
      "description": "Provides standardized interfaces and mechanisms for integrating with various external AI models and services. This component abstracts away the complexities of different model APIs, allowing Pipe Operators to interact with AI capabilities uniformly.",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.cogt.model_backends",
          "reference_file": "pipelex/cogt/model_backends/__init__.py",
          "reference_start_line": null,
          "reference_end_line": null
        },
        {
          "qualified_name": "pipelex.plugins",
          "reference_file": "pipelex/plugins/__init__.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "Cognitive Tools / AI Operations",
      "description": "Encapsulates higher-level AI functionalities and cognitive operations, such as Large Language Model (LLM) interactions, image generation, and Optical Character Recognition (OCR). These tools provide specialized AI capabilities that Pipe Operators can leverage.",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.cogt.llm",
          "reference_file": "pipelex/cogt/llm/__init__.py",
          "reference_start_line": null,
          "reference_end_line": null
        },
        {
          "qualified_name": "pipelex.cogt.img_gen",
          "reference_file": "pipelex/cogt/img_gen/__init__.py",
          "reference_start_line": null,
          "reference_end_line": null
        },
        {
          "qualified_name": "pipelex.cogt.ocr",
          "reference_file": "pipelex/cogt/ocr/__init__.py",
          "reference_start_line": null,
          "reference_end_line": null
        },
        {
          "qualified_name": "pipelex.cogt.content_generation",
          "reference_file": "pipelex/cogt/content_generation/__init__.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "Pipe Controllers",
      "description": "Orchestrates the execution of pipes, managing control flow logic such as sequencing, parallelism, and conditional execution. This component dictates the order and manner in which Pipe Operators are invoked.",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.pipe_controllers",
          "reference_file": "pipelex/pipe_controllers/__init__.py",
          "reference_start_line": null,
          "reference_end_line": null
        },
        {
          "qualified_name": "pipelex.pipe_controllers.sequence.sequence_controller.SequenceController",
          "reference_file": "I cannot fulfill this request as no file path was provided.",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "Utility Tools",
      "description": "Provides a collection of general-purpose utilities and helper functions used across the system. This includes functionalities like configuration management, secret handling, and templating, supporting various operational needs of other components.",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.tools",
          "reference_file": "pipelex/tools/__init__.py",
          "reference_start_line": null,
          "reference_end_line": null
        },
        {
          "qualified_name": "pipelex.tools.config.config_manager.ConfigManager",
          "reference_file": "<file_path>",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "Unclassified",
      "description": "Component for all unclassified files and utility functions (Utility functions/External Libraries/Dependencies)",
      "referenced_source_code": [],
      "assigned_files": [],
      "can_expand": false
    }
  ],
  "components_relations": [
    {
      "relation": "provides input to",
      "src_name": "Core Memory / State Management",
      "dst_name": "Pipe Operators"
    },
    {
      "relation": "sends output to",
      "src_name": "Pipe Operators",
      "dst_name": "Core Memory / State Management"
    },
    {
      "relation": "utilizes",
      "src_name": "Pipe Operators",
      "dst_name": "AI Model Adapters / Integrations"
    },
    {
      "relation": "utilizes",
      "src_name": "Pipe Operators",
      "dst_name": "Cognitive Tools / AI Operations"
    },
    {
      "relation": "invokes",
      "src_name": "Pipe Controllers",
      "dst_name": "Pipe Operators"
    },
    {
      "relation": "may use",
      "src_name": "Pipe Operators",
      "dst_name": "Utility Tools"
    }
  ]
}
