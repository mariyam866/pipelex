{
  "description": "The Pipelex system is initiated by the `Pipelex Environment Bootstrapper`, which sets up the foundational environment and the `Pipelex Hub`. The `Pipelex Hub` acts as a central service locator, providing core components like the `Pipeline Manager`, `Pipe Controllers`, `Working Memory`, `Pipeline Tracker`, and `Inference Manager` with necessary dependencies. The `Pipeline Manager` oversees the lifecycle of pipeline instances. `Pipe Controllers` are responsible for orchestrating the execution flow of pipelines, interpreting declarative definitions, and invoking `Pipe Operators`. `Pipe Operators` are the atomic units that perform specific AI/ML tasks or data transformations. During execution, `Pipe Controllers` and `Pipe Operators` interact with `Working Memory` for transient data storage and `Pipeline Tracker` for monitoring and recording the execution path. The `Inference Manager`, a specialized service for AI inference, is accessed through the `Pipelex Hub` and utilized by `Pipe Operators` for AI-specific tasks.",
  "components": [
    {
      "name": "Pipelex Environment Bootstrapper",
      "description": "Initializes the entire Pipelex system, including the Pipelex Hub, setting up the foundational environment for pipeline execution.",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.__init__",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/__init__.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/__init__.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipelex.py"
      ],
      "can_expand": true
    },
    {
      "name": "Pipelex Hub",
      "description": "Acts as a central service locator and dependency injection container. It provides other components within the execution core with access to various managers, providers, and workers (e.g., PipelineManager, InferenceManager).",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.hub",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/hub.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/hub.py"
      ],
      "can_expand": true
    },
    {
      "name": "Pipeline Manager",
      "description": "Manages the lifecycle of pipeline instances. It is responsible for creating new pipelines, retrieving existing ones by their run ID, and handling their state or persistence.",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.pipeline.pipeline_manager",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipeline/pipeline_manager.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipeline/pipeline_manager.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipeline/pipeline_models.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipeline/pipeline_manager_abstract.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipeline/job_metadata.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipeline/start.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipeline/pipeline_factory.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipeline/pipeline.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipeline/execute.py"
      ],
      "can_expand": true
    },
    {
      "name": "Pipe Controllers",
      "description": "The primary orchestrator of pipeline execution. It interprets declarative pipeline definitions (e.g., sequences, parallel branches, conditional logic, batch processing) and drives the execution flow by invoking appropriate Pipe Operators.",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.pipe_controllers",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/__init__.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/sub_pipe_blueprint.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/pipe_controller.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/sub_pipe.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/sub_pipe_factory.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/parallel/pipe_parallel_blueprint.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/parallel/pipe_parallel.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/parallel/pipe_parallel_factory.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/condition/pipe_condition_details.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/condition/pipe_condition.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/condition/pipe_condition_blueprint.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/condition/pipe_condition_factory.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/sequence/pipe_sequence.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/sequence/pipe_sequence_factory.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/sequence/exceptions.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/sequence/pipe_sequence_blueprint.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/batch/pipe_batch.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/batch/pipe_batch_factory.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_controllers/batch/pipe_batch_blueprint.py"
      ],
      "can_expand": true
    },
    {
      "name": "Pipe Operators",
      "description": "Implements the core logic for individual \"pipe\" types. These are the atomic units of work within a pipeline, performing specific AI/ML tasks (e.g., LLM calls, OCR, image generation) or data transformations.",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.pipe_operators",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/__init__.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/pipe_operator.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/ocr/pipe_ocr_factory.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/ocr/pipe_ocr_blueprint.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/ocr/pipe_ocr.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/func/pipe_func_blueprint.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/func/pipe_func_factory.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/func/pipe_func.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/llm/pipe_llm_factory.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/llm/pipe_llm_blueprint.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/llm/pipe_llm.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/img_gen/pipe_img_gen_factory.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/img_gen/pipe_img_gen_blueprint.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/img_gen/pipe_img_gen.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/jinja2/pipe_jinja2.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/jinja2/pipe_jinja2_factory.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_operators/jinja2/pipe_jinja2_blueprint.py"
      ],
      "can_expand": true
    },
    {
      "name": "Working Memory",
      "description": "Serves as the transient data store for 'Stuff' objects that flow between pipes during a pipeline's execution. It manages the state and data context for the currently running pipeline, ensuring data consistency and availability for subsequent steps.",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.core.memory.working_memory",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/memory/working_memory.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "Pipeline Tracker",
      "description": "Monitors and records the execution path of a pipeline, including the sequence of executed pipes, conditional branches taken, and parallel tasks. It is crucial for debugging, auditing, and generating visual representations of the execution flow.",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.pipeline.track.pipeline_tracker",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipeline/track/pipeline_tracker.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "Inference Manager",
      "description": "A specialized service for managing and executing AI inference tasks, often interacting with external LLM providers. It is accessed via the Pipelex Hub and utilized by Pipe Operators for AI-specific tasks.",
      "referenced_source_code": [
        {
          "qualified_name": "pipelex.cogt.inference.inference_manager",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/cogt/inference/inference_manager.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "Unclassified",
      "description": "Component for all unclassified files and utility functions (Utility functions/External Libraries/Dependencies)",
      "referenced_source_code": [],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/tools/runtime_manager.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/tools/environment.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_works/__init__.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_works/pipe_dry.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_works/pipe_router.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_works/pipe_job.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_works/pipe_router_protocol.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/pipe_works/pipe_job_factory.py",
        "/home/ubuntu/CodeBoarding/repo/pipelex/pipelex/core/__init__.py"
      ],
      "can_expand": false
    }
  ],
  "components_relations": [
    {
      "relation": "initializes",
      "src_name": "Pipelex Environment Bootstrapper",
      "dst_name": "Pipelex Hub"
    },
    {
      "relation": "provides access to",
      "src_name": "Pipelex Hub",
      "dst_name": "Pipeline Manager"
    },
    {
      "relation": "provides access to",
      "src_name": "Pipelex Hub",
      "dst_name": "Pipe Controllers"
    },
    {
      "relation": "provides access to",
      "src_name": "Pipelex Hub",
      "dst_name": "Working Memory"
    },
    {
      "relation": "provides access to",
      "src_name": "Pipelex Hub",
      "dst_name": "Pipeline Tracker"
    },
    {
      "relation": "provides access to",
      "src_name": "Pipelex Hub",
      "dst_name": "Inference Manager"
    },
    {
      "relation": "orchestrates execution by invoking",
      "src_name": "Pipe Controllers",
      "dst_name": "Pipe Operators"
    },
    {
      "relation": "reads/writes data from/to",
      "src_name": "Pipe Controllers",
      "dst_name": "Working Memory"
    },
    {
      "relation": "updates execution status in",
      "src_name": "Pipe Controllers",
      "dst_name": "Pipeline Tracker"
    },
    {
      "relation": "processes data from",
      "src_name": "Pipe Operators",
      "dst_name": "Working Memory"
    },
    {
      "relation": "writes results to",
      "src_name": "Pipe Operators",
      "dst_name": "Working Memory"
    },
    {
      "relation": "may interact with",
      "src_name": "Pipe Operators",
      "dst_name": "Inference Manager"
    }
  ]
}
